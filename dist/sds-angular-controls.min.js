/*! sds-angular-controls - v0.1.4 - 2014-12-23
* https://github.com/SMARTDATASYSTEMSLLC/sds-angular-controls
* Copyright (c) 2014 Steve Gentile, David Benson; Licensed  */
angular.module("sds-angular-controls",["ui.bootstrap","toggle-switch","ngSanitize"]),function(){"use strict";function a(){var a={};return{require:"?ngModel",restrict:"A",compile:function(b,c){var d=b.is("input:text");return function(b,e,f,g){var h=angular.extend({},a,b.$eval(f.autoNumeric)),i=function(a,b){$.isNumeric(b)&&a.autoNumeric("set",b)};e.autoNumeric(h),g&&d?(b.$watch(c.ngModel,function(){g.$render()}),g.$render=function(){i(e,g.$viewValue)},e.on("change",function(){b.$apply(function(){g.$setViewValue(e.autoNumeric("get"))})})):d&&f.$observe("value",function(a){i(e,a)})}}}}angular.module("sds-angular-controls").directive("autoNumeric",a)}(),function(){"use strict";function a(){return function(a){return a.toLowerCase().replace(/ (\w)/g,function(a,b){return b.toUpperCase()})}}angular.module("sds-angular-controls").filter("camelCase",a)}(),function(){"use strict";function a(a){return function(b,c){if("string"==typeof c)return a("filter")(b,c);var d=function(a,b){for(var c=b.split(".");c.length&&(a=a[c.shift()]););return a},e=[];return _.each(c,function(a){if("date"===a.type&&a.filter){var b=a.filter.split("-"),c=moment(b[0]),d=moment(b[1]||c.clone().endOf("day"));c.isValid()&&d.isValid()&&e.push({filter:[c.valueOf(),d.valueOf()],key:a.key,type:a.type})}else if("number"===a.type&&a.filter){var f=a.filter.split("-");!f[0]&&f[1]&&(f.slice(0,1),f[0]*=-1),!f[1]&&f[2]&&(f.slice(1,1),f[1]*=-1);var g=parseFloat(f[0]),h=parseFloat(f[1]||f[0]);e.push({filter:[g,h],key:a.key,type:a.type})}else"string"==typeof a.filter&&e.push({filter:a.filter.toLowerCase(),key:a.key})}),_.filter(b,function(a){return _.all(e,function(b){if(!b.filter||!b.key)return!0;if(!b.type)return(d(a,b.key)+"").toLowerCase().indexOf(b.filter)>-1;if("date"===b.type){var c=moment(d(a,b.key)).valueOf();return c>=b.filter[0]&&c<=b.filter[1]}return"number"===b.type?d(a,b.key)>=b.filter[0]&&d(a,b.key)<=b.filter[1]:void 0})})}}a.$inject=["$filter"],angular.module("sds-angular-controls").filter("complexFilter",a)}(),function(){"use strict";function a(){return function(a,b){var c={};return angular.forEach(a,function(a,d){d!==b&&(c[d]=a)}),c}}angular.module("sds-angular-controls").filter("keyFilter",a)}(),function(){"use strict";function a(){return function(a){return a=a.replace(/([A-Z])/g," $1"),a[0].toUpperCase()+a.slice(1)}}angular.module("sds-angular-controls").filter("labelCase",a)}(),function(){"use strict";function a(){var a=["th","st","nd","rd"];return function(b){var c=b%100;return b+(a[(c-20)%10]||a[c]||a[0])}}angular.module("sds-angular-controls").filter("ordinal",a)}(),function(){"use strict";function a(){return function(a,b,c){return a&&a.length?(b=parseInt(b||0,10)||0,c=parseInt(c||0,10),c||(c=25),a.slice(b*c,(b+1)*c)):[]}}angular.module("sds-angular-controls").filter("page",a)}(),function(){"use strict";function a(a){return a.trustAsHtml}a.$inject=["$sce"],angular.module("sds-angular-controls").filter("unsafe",a)}(),function(){"use strict";function a(){return{restrict:"EA",require:"^formField",replace:!0,scope:{dateFormat:"@",log:"@?",style:"@?",max:"@?",min:"@?",layoutCss:"@?",isReadonly:"=?",disableTimepicker:"=?"},templateUrl:"sds-angular-controls/form-datepicker.html",link:function(a,b,c,d){switch(a.record=d.getRecord(),a.field=d.getField(),a.isRequired=d.getRequired(),a.layout=d.getLayout(),a.isReadonly=a.isReadonly||!1,a.log=a.log||!1,a.disableTimepicker=a.disableTimepicker||!1,a.dateFormat=a.dateFormat||"MM-dd-yyyy",a.calendar={opened:!1},a.open=function(b){b.preventDefault(),b.stopPropagation(),a.calendar.opened=!0},a.layout){case"horizontal":a.layoutCss=a.layoutCss||"col-md-6";break;default:a.layoutCss=a.layoutCss||"col-md-4"}a.$watch("record",function(b){d.setValue(b[a.field])})}}}a.$inject=["$filter","$rootScope"],angular.module("sds-angular-controls").directive("formDatePicker",a)}(),function(){"use strict";function a(a){return{restrict:"EA",transclude:!0,replace:!0,scope:{record:"=",isRequired:"=?",isReadonly:"=?",field:"@",label:"@",rowClass:"@?",layout:"@?",labelCss:"@?",layoutCss:"@?",errorLayoutCss:"@?",hideValidationMessage:"=?",validationFieldName:"@?"},templateUrl:"sds-angular-controls/form-field.html",require:"^form",controller:["$scope","$element","$attrs",function(b,c){b.layout=b.layout||"stacked",b.label||(b.label=a("labelCase")(b.field)),b.validationFieldName=b.validationFieldName||a("labelCase")(b.field),b.showLabel=b.showLabel!==!1,b.hideValidationMessage=b.hideValidationMessage||!1,b.isRequired=b.isRequired||!1,b.isReadonly=b.isReadonly||!1,b.layoutCss=b.layoutCss||"col-md-4",b.errorLayoutCss=b.errorLayoutCss||"col-md-4","horizontal"===b.layout&&(b.labelCss=b.labelCss||"col-md-2"),this.getRecord=function(){return b.record},this.getField=function(){return b.field},this.getRequired=function(){return b.isRequired},this.getLayout=function(){return b.layout},this.setValue=function(a){b.record[b.field]=a},b.showError=function(a){try{var b=$(c).closest("form");return b.$submitted?a.$invalid:a.$dirty&&a.$invalid}catch(d){return!1}},this.setMin=function(a){b.min=a},this.setMax=function(a){b.max=a}}]}}a.$inject=["$filter"],angular.module("sds-angular-controls").directive("formField",a)}(),function(){"use strict";function a(a){return{restrict:"EA",require:"^formField",replace:!0,scope:{log:"@?",placeholder:"@?",mask:"@?",style:"@?",max:"@?",min:"@?",type:"@",layoutCss:"@?",isReadonly:"=?",isNumeric:"=?"},templateUrl:"sds-angular-controls/form-input.html",link:function(b,c,d,e){function f(){b.isReadonly&&"toggle"===b.fieldType&&(b.readOnlyModel=b.record[b.field])}switch(b.record=e.getRecord(),b.field=e.getField(),b.isRequired=e.getRequired(),b.layout=e.getLayout(),b.isReadonly=b.isReadonly||!1,b.log=b.log||!1,b.type=b.type||"text",b.min&&e.setMin(b.min),b.max&&e.setMax(b.max),b.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||"col-md-4"}b.placeholder=b.placeholder||a("labelCase")(b.field),b.$watch("isReadonly",function(a,b){a!==b&&f()}),b.$watch("record",function(a){e.setValue(a[b.field]),f()})}}}a.$inject=["$filter"],angular.module("sds-angular-controls").directive("formInput",a)}(),function(){"use strict";function a(){return{restrict:"EA",require:"^formField",replace:!0,scope:{items:"=",itemKey:"@?",itemValue:"@?",log:"@?",style:"@?",layoutCss:"@?",isReadonly:"=?"},templateUrl:"sds-angular-controls/form-select.html",link:function(a,b,c,d){function e(a,b,c){var d=function(){};return d.prototype.orderedKeys=[],_.reduce(a,function(a,d){return a[d[b]]=d[c],a.orderedKeys.push(d[b]),a},new d)}switch(a.record=d.getRecord(),a.field=d.getField(),a.isRequired=d.getRequired(),a.layout=d.getLayout(),a.isReadonly=a.isReadonly||!1,a.log=a.log||!1,a.layout){case"horizontal":a.layoutCss=a.layoutCss||"col-md-6";break;default:a.layoutCss=a.layoutCss||"col-md-4"}a.orderHash=function(a){return a?a.orderedKeys||Object.keys(a):[]},a.convertType=function(b){return a.record&&a.record[a.field]&&"string"==typeof a.record[a.field]?b.toString():b&&!isNaN(parseInt(b,10))?parseInt(b,10):b},a.$watch("items",function(){a.items&&_.isArray(a.items)&&a.itemKey&&a.itemValue&&(a.items=e(a.items,a.itemKey,a.itemValue))}),a.$watch("record",function(b){d.setValue(b[a.field])})}}}a.$inject=["$filter","$rootScope"],angular.module("sds-angular-controls").directive("formSelect",a)}(),function(){"use strict";function a(){return{restrict:"EA",require:"^formField",replace:!0,scope:{log:"@?",placeholder:"@?",toggleField:"@?",toggleSwitchType:"@?",onLabel:"@?",offLabel:"@?",style:"@?",type:"@",layoutCss:"@?",isReadonly:"=?"},templateUrl:"sds-angular-controls/form-toggle.html",link:function(a,b,c,d){function e(){a.isReadonly&&"toggle"===a.fieldType&&(a.readOnlyModel=a.record[a.field])}switch(a.record=d.getRecord(),a.field=d.getField(),a.isRequired=d.getRequired(),a.layout=d.getLayout(),a.isReadonly=a.isReadonly||!1,a.log=a.log||!1,a.type=a.type||"text",a.toggleSwitchType=a.toggleSwitchType||"primary",a.onLabel=a.onLabel||"Yes",a.offLabel=a.offLabel||"No",a.layout){case"horizontal":a.layoutCss=a.layoutCss||"col-md-6";break;default:a.layoutCss=a.layoutCss||"col-md-4"}a.$watch("isReadonly",function(a,b){a!==b&&e()}),a.$watch("record",function(b){d.setValue(b[a.field]),e()})}}}a.$inject=["$filter"],angular.module("sds-angular-controls").directive("formToggle",a)}(),function(){"use strict";function a(){return{restrict:"A",scope:{maskInput:"@"},link:function(a,b){a.maskInput&&$(b).mask(a.maskInput)}}}angular.module("sds-angular-controls").directive("maskInput",a)}(),function(){"use strict";function a(){return function(a){if(!a)return"";var b=a.toString().trim().replace(/^\+/,"");if(b.match(/[^0-9]/))return a;var c,d,e;switch(b.length){case 10:c=1,d=b.slice(0,3),e=b.slice(3);break;case 11:c=b[0],d=b.slice(1,4),e=b.slice(4);break;case 12:c=b.slice(0,3),d=b.slice(3,5),e=b.slice(5);break;default:return a}return 1===c&&(c=""),e=e.slice(0,3)+"-"+e.slice(3),(c+" ("+d+") "+e).trim()}}angular.module("sds-angular-controls").filter("phoneNumber",a)}(),angular.module("sds-angular-controls").run(["$templateCache",function(a){"use strict";a.put("sds-angular-controls/form-directives/form-datepicker.html",'<span class="input-group"> <input type="text" style="{{::style}}" class="form-control datepicker" ng-if="!isReadonly" ng-readonly="isReadonly" placeholder="{{placeholder}}" ng-model="record[field]" ng-required="::isRequired" min-date="::min" max-date="::max" datepicker-popup="{{::dateFormat}}" is-open="calendar.opened"> <span ng-if="!isReadonly" class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="open($event)"><i class="glyphicon glyphicon-calendar"></i></button> </span> </span>'),a.put("sds-angular-controls/form-directives/form-field.html","<div class=\"row\"> <script type=\"text/ng-template\" id=\"validation.html\"><div ng-if=\"!hideValidationMessage\" class='has-error' ng-show='showError({{field}})'\n             ng-messages='{{field}}.$error'>\n            <span class='control-label' ng-message='required'> {{ validationFieldName }} is required. </span>\n            <span class='control-label' ng-message='text'> {{ validationFieldName }} should be text. </span>\n            <span class='control-label' ng-message='email'> {{ validationFieldName }} should be an email address. </span>\n            <span class='control-label' ng-message='date'> {{ validationFieldName}} should be a date. </span>\n            <span class='control-label' ng-message='datetime'> {{ validationFieldName }} should be a datetime. </span>\n            <span class='control-label' ng-message='time'> {{ validationFieldName }} should be a time. </span>\n            <span class='control-label' ng-message='month'> {{ validationFieldName }} should be a month. </span>\n            <span class='control-label' ng-message='week'> {{ validationFieldName }} should be a week. </span>\n            <span class='control-label' ng-message='url'> {{ validationFieldName }} should be an url. </span>\n            <span class='control-label' ng-message='zip'> {{ validationFieldName }} should be a valid zipcode. </span>\n            <span class='control-label' ng-message='number'>{{ validationFieldName }} must be a number</span>\n            <span class='control-label' ng-message='tel'>{{ validationFieldName }} must be a phone number</span>\n            <span class='control-label' ng-message='color'>{{ validationFieldName }} must be a color</span>\n            <span class='control-label' ng-message='min'> {{ validationFieldName }} must be at least {{min}}. </span>\n            <span class='control-label' ng-message='max'> {{ validationFieldName }} must not exceed {{max}} </span>\n            <span class='control-label' ng-repeat='(k, v) in types' ng-message='{{k}}'> {{ validationFieldName }}{{v[1]}}</span>\n"+'        </div></script> <div ng-if="layout === \'stacked\'" class="form-group clearfix" ng-form="{{field}}" ng-class="{ \'has-error\': showError({{field}}) }"> <div class="{{::layoutCss}}"> <label ng-if="showLabel" class="control-label {{labelCss}}"> {{ label }} <span ng-if="isRequired && !isReadonly">*</span></label> <!--<div class="clearfix">--> <div ng-transclude></div> <!--</div>--> <!-- validation --> <div class="pull-left" ng-include="\'validation.html\'"></div> </div> </div> <div ng-if="layout === \'horizontal\'" class="form-group" ng-form="{{field}}" ng-class="{ \'has-error\': showError({{field}}) }"> <label ng-if="showLabel" class="control-label {{labelCss}}"> {{ label }} <span ng-if="isRequired && !isReadonly">*</span></label> <!--<div class="clearfix">--> <div ng-transclude></div> <!--</div>--> <!-- validation --> <div class="pull-right" ng-include="\'validation.html\'"></div> </div> </div>'),a.put("sds-angular-controls/form-directives/form-input.html",'<div> <div class="{{layout === \'horizontal\' ? layoutCss : \'\' }}"> <input ng-if="!isNumeric" class="form-control inputField {{layout === \'stacked\' ? layoutCss : \'\'}}" ng-model="record[field]" type="{{::type}}" ng-required="isRequired" ng-disabled="isReadonly" placeholder="{{::placeholder}}" max="{{::max}}" min="{{::min}}" style="{{::style}}" mask-input="{{::mask}}"> <input ng-if="isNumeric" class="form-control inputField {{layout === \'stacked\' ? layoutCss : \'\'}}" ng-model="record[field]" type="{{::type}}" ng-required="isRequired" ng-disabled="isReadonly" placeholder="{{::placeholder}}" max="{{::max}}" min="{{::min}}" style="{{::style}}" mask-input="{{::mask}}" auto-numeric> <div ng-if="log"> form-input value: {{record[field]}}<br> {{isRequired}} </div> </div> </div>'),a.put("sds-angular-controls/form-directives/form-select.html",'<div> <select ng-if="!isReadonly && !hasFilter" ng-readonly="isReadonly" class="form-control" name="{{::field}}" ng-model="record[field]" ng-options="convertType(key) as items[key] for key in orderHash(items)" ng-required="isRequired"></select> <!-- optionValue as optionLabel for arrayItem in array --> <input ng-if="isReadonly" style="{{::style}}" ng-readonly="isReadonly" type="text" class="form-control inputField {{::inputLayoutCss}}" ng-model="readOnlyModel"> <div ng-if="log"> form-input value: {{record[field]}}<br> {{isRequired}} </div> </div>'),a.put("sds-angular-controls/form-toggle.html",'<div> <!-- bug in toggle where setting any disabled makes it disabled - so needing an if here --> <toggle-switch ng-if="isReadonly" style="{{::style}}" disabled class="{{::toggleSwitchType}}" ng-model="record[field]" on-label="{{::onLabel}}" off-label="{{::offLabel}}"> </toggle-switch> <toggle-switch ng-if="!isReadonly" style="{{::style}}" class="{{::toggleSwitchType}}" ng-model="record[field]" on-label="{{::onLabel}}" off-label="{{::offLabel}}"> </toggle-switch> <div ng-if="log"> form-input value: {{record[field]}}<br> {{isRequired}} </div> </div>')}]);