/*! sds-angular-controls - v0.0.1 - 2014-12-21
* https://github.com/SMARTDATASYSTEMSLLC/sds-angular-controls
* Copyright (c) 2014 Steve Gentile, David Benson; Licensed  */
angular.module("sds-angular-controls",["ui.bootstrap","toggle-switch","ngSanitize"]),function(){"use strict";function a(a,b){return void 0===$.fn.modal&&($.fn.modal=function(b){var c=this;if("hide"===b)return void(this.data("bs.modal")&&(this.data("bs.modal").close(),$(c).remove()));if("show"!==b){var d=a.open({template:$(this).find(".modal-content").html()});this.data("bs.modal",d),setTimeout(function(){$(".modal.ng-isolate-scope").remove(),$(c).css({opacity:1,display:"block"}).addClass("in")},100)}}),b.bootbox}a.$inject=["$modal","$window"],angular.module("sds-angular-controls").factory("$bootbox",a)}(),function(){"use strict";function a(){return function(a){return a.toLowerCase().replace(/ (\w)/g,function(a,b){return b.toUpperCase()})}}angular.module("sds-angular-controls").filter("camelCase",a)}(),function(){"use strict";function a(a,b){return{restrict:"E",replace:!0,transclude:!0,scope:{cols:"=",data:"=",label:"@",hideAdvanced:"@",className:"@",pageSize:"@"},templateUrl:"sds-angular-controls/client-grid.html",link:function(c,d){function e(a){c.vm.sort===a?c.vm.sortAsc=!c.vm.sortAsc:c.vm.sort=a}function f(){console.log("enter"),1===c.vm.resultCount.length&&b(function(){d.find("tbody tr a:first").click()})}function g(a,b,c){angular.element(a.target).is("a, button, input[type=button]")&&(a.preventDefault(),b.callback(c))}function h(){_.each(c.cols,function(a){a.filter=""})}if(c.vm={sortAsc:!1,sort:_.findIndex(c.cols,{sortable:!0}),currentPage:1,pageSize:c.pageSize?c.pageSize:25,showAdvanced:!1,filterText:"",toggleSort:e,onClick:g,onEnter:f,clearFilters:h,extend:function(a){return _.extend({},d.parent().scope(),a)}},c.cols)for(var i="",j=0;j<c.cols.length;j++)"function"!=typeof c.cols[j].template&&(i=c.cols[j].template?c.cols[j].template:c.cols[j].key?"{{"+c.cols[j].key+"}}":"",c.cols[j].template=a(i))}}}a.$inject=["$interpolate","$timeout"],angular.module("sds-angular-controls").directive("clientGrid",a)}(),function(){"use strict";function a(a){return function(b,c){if("string"==typeof c)return a("filter")(b,c);var d=function(a,b){for(var c=b.split(".");c.length&&(a=a[c.shift()]););return a},e=[];return _.each(c,function(a){if("date"===a.type&&a.filter){var b=a.filter.split("-"),c=moment(b[0]),d=moment(b[1]||c.clone().endOf("day"));c.isValid()&&d.isValid()&&e.push({filter:[c.valueOf(),d.valueOf()],key:a.key,type:a.type})}else if("number"===a.type&&a.filter){var f=a.filter.split("-");!f[0]&&f[1]&&(f.slice(0,1),f[0]*=-1),!f[1]&&f[2]&&(f.slice(1,1),f[1]*=-1);var g=parseFloat(f[0]),h=parseFloat(f[1]||f[0]);e.push({filter:[g,h],key:a.key,type:a.type})}else"string"==typeof a.filter&&e.push({filter:a.filter.toLowerCase(),key:a.key})}),_.filter(b,function(a){return _.all(e,function(b){if(!b.filter||!b.key)return!0;if(!b.type)return(d(a,b.key)+"").toLowerCase().indexOf(b.filter)>-1;if("date"===b.type){var c=moment(d(a,b.key)).valueOf();return c>=b.filter[0]&&c<=b.filter[1]}return"number"===b.type?d(a,b.key)>=b.filter[0]&&d(a,b.key)<=b.filter[1]:void 0})})}}a.$inject=["$filter"],angular.module("sds-angular-controls").filter("complexFilter",a)}(),function(){"use strict";function a(a,b){b.types=InputTypes,b.isReadonly=b.isReadonly||!1,b.layout=b.layout||"stacked",b.isRequired=b.isRequired||!1,b.showLabel=b.showLabel||!0,b.hideValidationMessage=b.hideValidationMessage||!1,"inline"===b.layout&&(b.labelLayoutCss=b.labelLayoutCss||"col-md-4",b.inputLayoutCss=b.inputLayoutCss||"col-md-6",b.errorLayoutCss=b.errorLayoutCss||"col-md-4"),b.label||(b.label=$filter("labelCase")(b.field))}a.$inject=["$q","$scope","$rootScope","$compile","$timeout"],angular.module("sds-angular-controls").value("InputTypes",{text:["Text","should be text"],email:["Email","should be an email address"],number:["Number","should be a number"],date:["Date","should be a date"],datetime:["Datetime","should be a datetime"],time:["Time","should be a time"],month:["Month","should be a month"],week:["Week","should be a week"],url:["URL","should be a URL"],tel:["Phone Number","should be a phone number"],color:["Color","should be a color"]}).factory("formBase",a)}(),function(){"use strict";function a(a,b){return{restrict:"EA",transclude:!0,replace:!0,scope:{record:"=",isRequired:"=?",isReadonly:"=?",field:"@",label:"@",rowClass:"@?",layout:"@?",labelCss:"@?",layoutCss:"@?",errorLayoutCss:"@?",hideValidationMessage:"=?"},templateUrl:"sds-angular-controls/form-field.html",require:"^form",controller:["$scope","$element","$attrs",function(c,d){c.layout=c.layout||"stacked",c.label||(c.label=a("labelCase")(c.field)),c.showLabel=c.showLabel||!0,c.hideValidationMessage=c.hideValidationMessage||!1,c.isRequired=c.isRequired||!1,c.isReadonly=c.isReadonly||!1,c.layoutCss=c.layoutCss||"col-md-4",c.errorLayoutCss=c.errorLayoutCss||"col-md-4","horizontal"===c.layout&&(c.labelCss=c.labelCss||"col-md-2"),this.getRecord=function(){return c.record},this.getField=function(){return c.field},this.getRequired=function(){return c.isRequired},this.getLayout=function(){return c.layout},this.setValue=function(a){c.record[c.field]=a},c.showError=function(a){try{var b=$(d).closest("form");return b.$submitted?a.$invalid:a.$dirty&&a.$invalid}catch(c){return!1}},b.$on("input-min",function(a,b){c.record[b.field]&&(c.min=b.min)}),b.$on("input-max",function(a,b){c.record[b.field]&&(c.max=b.max)})}]}}a.$inject=["$filter","$rootScope"],angular.module("sds-angular-controls").directive("formField",a)}(),function(){"use strict";function a(a,b){return{restrict:"EA",require:"^formField",replace:!0,scope:{log:"@?",placeholder:"@?",mask:"@?",style:"@?",max:"@?",min:"@?",type:"@",layoutCss:"@?",isReadonly:"=?"},templateUrl:"sds-angular-controls/form-input.html",link:function(c,d,e,f){switch(c.record=f.getRecord(),c.field=f.getField(),c.isRequired=f.getRequired(),c.layout=f.getLayout(),c.isReadonly=c.isReadonly||!1,c.log=c.log||!1,c.type=c.type||"text",c.min&&b.$broadcast("input-min",{field:c.field,min:c.min}),c.max&&b.$broadcast("input-max",{field:c.field,max:c.max}),c.layout){case"horizontal":c.layoutCss=c.layoutCss||"col-md-6";break;default:c.layoutCss=c.layoutCss||"col-md-4"}c.placeholder=c.placeholder||a("labelCase")(c.field),c.$watch("record",function(a){f.setValue(a[c.field])})}}}a.$inject=["$filter","$rootScope"],angular.module("sds-angular-controls").directive("formInput",a)}(),function(){"use strict";function a(){return function(a,b){var c={};return angular.forEach(a,function(a,d){d!==b&&(c[d]=a)}),c}}angular.module("sds-angular-controls").filter("keyFilter",a)}(),function(){"use strict";function a(){return function(a){return a=a.replace(/([A-Z])/g," $1"),a[0].toUpperCase()+a.slice(1)}}angular.module("sds-angular-controls").filter("labelCase",a)}(),function(){"use strict";function a(){return{restrict:"A",scope:{maskInput:"@"},link:function(a,b){a.maskInput&&$(b).mask(a.maskInput)}}}angular.module("sds-angular-controls").directive("maskInput",a)}(),function(){"use strict";function a(){return{restrict:"A",link:function(a,b,c){b.bind("keypress",function(b){13===b.which&&(a.$apply(function(){a.$eval(c.onEnter)}),b.preventDefault())})}}}angular.module("sds-angular-controls").directive("onEnter",a)}(),function(){"use strict";function a(){var a=["th","st","nd","rd"];return function(b){var c=b%100;return b+(a[(c-20)%10]||a[c]||a[0])}}angular.module("sds-angular-controls").filter("ordinal",a)}(),function(){"use strict";function a(){return function(a,b,c){return a&&a.length?(b=parseInt(b||0,10)||0,c=parseInt(c||0,10),c||(c=25),a.slice(b*c,(b+1)*c)):[]}}angular.module("sds-angular-controls").filter("page",a)}(),function(){"use strict";function a(){return function(a){if(!a)return"";var b=a.toString().trim().replace(/^\+/,"");if(b.match(/[^0-9]/))return a;var c,d,e;switch(b.length){case 10:c=1,d=b.slice(0,3),e=b.slice(3);break;case 11:c=b[0],d=b.slice(1,4),e=b.slice(4);break;case 12:c=b.slice(0,3),d=b.slice(3,5),e=b.slice(5);break;default:return a}return 1===c&&(c=""),e=e.slice(0,3)+"-"+e.slice(3),(c+" ("+d+") "+e).trim()}}angular.module("sds-angular-controls").filter("phoneNumber",a)}(),angular.module("sds-angular-controls").run(["$templateCache",function(a){"use strict";a.put("sds-angular-controls/client-grid.html",'<div class="table-responsive"> <div class="btn-toolbar"> <a ng-if="vm.showAdvanced" href="" class="btn btn-default" ng-click="vm.clearFilters()">Clear All Filters <span class="big-x">&times;</span></a> <div ng-if="!vm.showAdvanced" class="toolbar-input"> <div class="form-group has-feedback"> <input class="form-control" type="text" ng-model="vm.filterText" placeholder="Filter {{label || \'items\'}}" on-enter="vm.onEnter()"> <a href="" ng-click="vm.filterText = \'\'" class="form-control-feedback feedback-link">&times;</a> </div> </div> <a href="" ng-if="!hideAdvanced" class="btn btn-default" ng-class="{active: vm.showAdvanced}" ng-click="vm.showAdvanced = !vm.showAdvanced">Advanced Filtering</a> <ng-transclude></ng-transclude> <p ng-show="data"><i>{{vm.resultCount.length}} {{label || \'items\'}}</i></p> </div> <table class="table table-hover {{className}}"> <thead> <tr> <th ng-repeat="col in cols"> <div ng-if="vm.showAdvanced && col.sortable"> <input type="text" class="form-control filter-input" on-enter="vm.onEnter()" ng-model="col.filter" placeholder="Filter {{col.name}}" tooltip="{{col.type ? \'Use a dash (-) to specify a range\' : \'\'}}" tooltip-trigger="focus" tooltip-placement="top"> </div> <a href="" ng-if="col.sortable" ng-click="vm.toggleSort($index)">{{::col.name}} <i class="fa" ng-class="{\n                     \'fa-sort\'     : vm.sort !== $index,\n                     \'fa-sort-down\': vm.sort === $index &&  vm.sortAsc,\n                     \'fa-sort-up\'  : vm.sort === $index && !vm.sortAsc\n                     }"></i> </a> <span ng-if="!col.sortable"> {{::col.name}} </span>    <tbody> <tr ng-repeat="row in (vm.resultCount = (data | complexFilter : (vm.showAdvanced ? cols : vm.filterText)))\n                                                      | orderBy       : cols[vm.sort].key       : vm.sortAsc\n                                                      | page          : (vm.currentPage - 1)    : vm.pageSize"> <td ng-repeat-start="col in cols" ng-if="col.callback && !col.fieldType" ng-click="vm.onClick($event, col, row)" ng-bind-html="::col.template(vm.extend(row)) | unsafe">  <td ng-if="!col.callback && !col.fieldType" ng-bind-html="::col.template(vm.extend(row)) | unsafe">  <td ng-repeat-end ng-if="col.fieldType"> <form-field layout="grid" record="row" items="col.items" field="{{col.key}}" type="{{col.type}}" mask="{{col.mask}}" on-label="{{col.onLabel}}" off-label="{{col.offLabel}}" is-required="col.isRequired" field-type="{{col.fieldType}}" date-format="{{col.dateFormat}}" input-layout-css="{{col.inputLayoutCss}}" disable-timepicker="col.disableTimepicker" toggle-switch-type="{{col.toggleSwitchType}}"></form-field>    </table> <pagination ng-if="vm.resultCount.length > vm.pageSize" total-items="vm.resultCount.length" items-per-page="vm.pageSize" ng-model="vm.currentPage"></pagination> </div>'),a.put("sds-angular-controls/form-field.html","<div class=\"row\"> <script type=\"text/ng-template\" id=\"validation.html\"><div ng-if=\"!hideValidationMessage\" class='has-error' ng-show='showError({{field}})'\n             ng-messages='{{field}}.$error'>\n            <span class='control-label' ng-message='required'> {{ field | labelCase }} is required. </span>\n            <span class='control-label' ng-message='text'> {{ field | labelCase }} should be text. </span>\n            <span class='control-label' ng-message='email'> {{ field | labelCase }} should be an email address. </span>\n            <span class='control-label' ng-message='date'> {{ field | labelCase }} should be a date. </span>\n            <span class='control-label' ng-message='datetime'> {{ field | labelCase }} should be a datetime. </span>\n            <span class='control-label' ng-message='time'> {{ field | labelCase }} should be a time. </span>\n            <span class='control-label' ng-message='month'> {{ field | labelCase }} should be a month. </span>\n            <span class='control-label' ng-message='week'> {{ field | labelCase }} should be a week. </span>\n            <span class='control-label' ng-message='url'> {{ field | labelCase }} should be an url. </span>\n            <span class='control-label' ng-message='zip'> {{ field | labelCase }} should be a valid zipcode. </span>\n            <span class='control-label' ng-message='number'>{{ field | labelCase }} must be a number</span>\n            <span class='control-label' ng-message='tel'>{{ field | labelCase }} must be a phone number</span>\n            <span class='control-label' ng-message='color'>{{ field | labelCase }} must be a color</span>\n            <span class='control-label' ng-message='min'> {{ field | labelCase }} must be at least {{min}}. </span>\n            <span class='control-label' ng-message='max'> {{ field | labelCase }} must not exceed {{max}} </span>\n            <span class='control-label' ng-repeat='(k, v) in types' ng-message='{{k}}'> {{ field | labelCase }}{{v[1]}}</span>\n"+'        </div></script> <div ng-if="layout === \'stacked\'" class="form-group clearfix" ng-form="{{field}}" ng-class="{ \'has-error\': showError({{field}}) }"> <div class="{{::layoutCss}}"> <label ng-if="showLabel" class="control-label {{labelCss}}"> {{ label }} <span ng-if="isRequired && !isReadonly">*</span></label> <!--<div class="clearfix">--> <div ng-transclude></div> <!--</div>--> <!-- validation --> <div class="pull-left" ng-include="\'validation.html\'"></div> </div> </div> <div ng-if="layout === \'horizontal\'" class="form-group" ng-form="{{field}}" ng-class="{ \'has-error\': showError({{field}}) }"> <label ng-if="showLabel" class="control-label {{labelCss}}"> {{ label }} <span ng-if="isRequired && !isReadonly">*</span></label> <!--<div class="clearfix">--> <div ng-transclude></div> <!--</div>--> <!-- validation --> <div class="pull-right" ng-include="\'validation.html\'"></div> </div> </div>'),a.put("sds-angular-controls/form-input.html",'<div> <div ng-if="layout === \'horizontal\'" class="{{::layoutCss}}"> <input class="form-control inputField" ng-model="record[field]" type="{{::type}}" ng-required="isRequired" ng-disabled="isReadonly" placeholder="{{::placeholder}}" max="{{::max}}" min="{{::min}}" style="{{::style}}" mask-input="{{::mask}}"> </div> <div ng-if="layout === \'stacked\'"> <input class="form-control inputField {{::layoutCss}}" ng-model="record[field]" type="{{::type}}" ng-required="isRequired" ng-disabled="isReadonly" placeholder="{{::placeholder}}" max="{{::max}}" min="{{::min}}" style="{{::style}}" mask-input="{{::mask}}"> </div> <div ng-if="log"> form-input value: {{record[field]}}<br> {{isRequired}} </div> </div>')}]),function(){"use strict";function a(a){return a.trustAsHtml}a.$inject=["$sce"],angular.module("sds-angular-controls").filter("unsafe",a)}();